-- vim: set foldmethod=indent shiftwidth=8 ft=applescript
set Go to 1
tell application "System Events"
	global df
	set df to first process whose name is "dwarfort.exe"
end tell

set choice to choose from list {"Bedrooms", "Circles", "Workshops"} with title "Dig Designation" with prompt "Choose what to dig" OK button name "This room" cancel button name "Cancel" default items {"Bedrooms"}

if (choice contains "bedrooms") then
else if (choice contains "circles") then
	
else if (choice contains "workshops") then
	
end if

global del
set del to 0.07

log "DF Running"


on ks(cmd, shft) -- send keystroke, shift (bool)
	global del
	tell application "System Events"
		tell process "SystemUIServer"
			delay del
			if (shft is 1) then
				keystroke cmd using shift down
			else
				keystroke cmd
			end if
		end tell
	end tell
end ks

on kr() -- send keystroke
	global del
	tell application "System Events"
		tell process "SystemUIServer"
			delay del
			keystroke return
			
		end tell
	end tell
end kr

on kc(cmd) -- send key code
	global del
	tell application "System Events"
		tell process "SystemUIServer"
			delay del
			key code cmd
			--			delay 1
		end tell
	end tell
end kc

on cr() -- carriage return "enter"
	global del
	tell application "System Events"
		tell process "SystemUIServer"
			delay del
			key code 36
		end tell
	end tell
end cr

on dr() -- double return
	global del
	tell application "System Events"
		tell process "SystemUIServer"
			delay del
			key code 36
			delay del
			key code 36
		end tell
	end tell
end dr

on westBR()
	set rows to choose from list {"1", "2", "3", "4", "5"} with title "rows" default items {"1"}
	global df
	set frontmost of df to true
	repeat while (rows is greater than 0)
		ks("d", 0)
		cr()
		ks("66", 1)
		cr()
		ks("44", 1)
		ks("98888", 0)
		cr()
		ks("222", 0)
		cr()
		ks("2222", 0)
		cr()
		ks("222", 0)
		cr()
		ks("6", 0)
		cr()
		ks("8", 1)
		cr()
		
		ks("66", 0)
		set tmp to 6
		repeat while (tmp is greater than 0)
			cr()
			ks("222", 0)
			cr()
			ks("2222", 0)
			cr()
			ks("222", 0)
			cr()
			ks("6", 0)
			cr()
			ks("8", 1)
			cr()
			ks("66", 0)
			set tmp to tmp - 1
		end repeat
		ks("14", 1)
		ks("1122222", 0)
		set rows to rows - 1
	end repeat
	
end westBR

on eastBR()
	set rows to choose from list {"1", "2", "3", "4", "5"} with title "rows" default items {"1"}
	global df
	set frontmost of df to true
	repeat while (rows is greater than 0)
		ks("d", 0)
		cr()
		ks("44", 1)
		cr()
		ks("66", 1)
		ks("12222", 0)
		cr()
		ks("888", 0)
		cr()
		ks("8888", 0)
		cr()
		ks("888", 0)
		cr()
		ks("4", 0)
		cr()
		ks("2", 1)
		cr()
		ks("44", 0)
		set tmp to 6
		repeat while (tmp is greater than 0)
			cr()
			ks("888", 0)
			cr()
			ks("8888", 0)
			cr()
			ks("888", 0)
			cr()
			ks("4", 0)
			cr()
			ks("2", 1)
			cr()
			ks("44", 0)
			set tmp to tmp - 1
		end repeat
		set rows to rows - 1
		ks("69", 1)
		ks("9988888", 0)
	end repeat
	
end eastBR

on northBR()
	set cols to choose from list {"1", "2", "3", "4", "5"} with title "columns" default items {"1"}
	global df
	set frontmost of df to true
	repeat while (cols is greater than 0)
		ks("d", 0)
		cr()
		ks("22", 1)
		cr()
		ks("88", 1)
		ks("36666", 0)
		cr()
		ks("444", 0)
		cr()
		ks("4444", 0)
		cr()
		ks("444", 0)
		cr()
		ks("2", 0)
		cr()
		ks("6", 1)
		cr()
		ks("22", 0)
		set tmp to 6
		repeat while (tmp is greater than 0)
			cr()
			ks("444", 0)
			cr()
			ks("4444", 0)
			cr()
			ks("444", 0)
			cr()
			ks("2", 0)
			cr()
			ks("6", 1)
			cr()
			ks("22", 0)
			
			set tmp to tmp - 1
		end repeat
		ks("88", 1)
		ks("9966666", 0)
		set cols to cols - 1
	end repeat
end northBR


on southBR()
	set cols to choose from list {"1", "2", "3", "4", "5"} with title "columns" default items {"1"}
	global df
	set frontmost of df to true
	repeat while (cols is greater than 0)
		ks("d", 0)
		cr()
		ks("88", 1)
		cr()
		ks("22", 1)
		ks("8", 0)
		ks("44444", 0)
		cr()
		ks("666", 0)
		cr()
		ks("6666", 0)
		cr()
		ks("666", 0)
		cr()
		ks("8", 0)
		cr()
		ks("4", 1)
		cr()
		ks("88", 0)
		set tmp to 6
		repeat while (tmp is greater than 0)
			cr()
			ks("666", 0)
			cr()
			ks("6666", 0)
			cr()
			ks("666", 0)
			cr()
			ks("8", 0)
			cr()
			ks("4", 1)
			cr()
			ks("88", 0)
			set tmp to tmp - 1
		end repeat
		ks("6666622", 0)
		ks("22", 1)
		ks("6", 1)
		ks("66", 0)
		set cols to cols - 1
	end repeat
end southBR

on LL()
	cr()
	ks("44444444444", 0)
	cr()
	ks("9", 0)
	cr()
	ks("22", 0)
	cr()
	ks("3", 0)
	cr()
	ks("8888", 0)
	cr()
	ks("66", 0)
	cr()
	ks("88", 0)
	cr()
	ks("3", 0)
	cr()
	ks("22", 0)
	cr()
	ks("9", 0)
	dr()
	ks("2222", 0)
	cr()
	ks("44", 0)
	dr()
	ks("22", 0)
	cr()
	ks("9", 0)
	cr()
	ks("88", 0)
	cr()
	ks("969", 0)
	cr()
	ks("22", 0)
	cr()
	ks("66", 0)
	cr()
	ks("88", 0)
	cr()
	ks("3", 0)
end LL

on RR()
	ks("d", 0)
	cr()
	ks("66666666666", 0)
	cr()
	ks("7", 0)
	cr()
	ks("22", 0)
	cr()
	ks("1", 0)
	cr()
	ks("8888", 0)
	cr()
	ks("44", 0)
	cr()
	ks("88", 0)
	cr()
	ks("1", 0)
	cr()
	ks("22", 0)
	cr()
	ks("7", 0)
	dr()
	ks("2222", 0)
	cr()
	ks("66", 0)
	dr()
	ks("22", 0)
	cr()
	ks("7", 0)
	cr()
	ks("88", 0)
	cr()
	ks("444", 0)
	cr()
	ks("88", 0)
	cr()
	ks("44", 0)
	cr()
	ks("22", 0)
	cr()
	ks("7", 0)
end RR

on RDU()
	ks("d", 0)
	cr()
	ks("666666", 0)
	dr()
	ks("888", 0)
	cr()
	ks("3", 0)
	cr()
	ks("44", 0)
	dr()
	ks("88", 0)
	cr()
	ks("44", 0)
	cr()
	ks("22", 0)
	dr()
	ks("44", 0)
	cr()
	ks("9", 0)
	cr()
	ks("22", 0)
	cr()
	ks("3", 0)
	cr()
	ks("222", 0)
	cr()
	ks("9", 0)
	dr()
	ks("44", 0)
	cr()
	ks("22", 0)
	cr()
	ks("777744", 0)
	cr()
	ks("444444", 0)
	dr()
	ks("888", 0)
	cr()
	ks("1", 0)
	cr()
	ks("66", 0)
	dr()
	ks("88", 0)
	cr()
	ks("66", 0)
	cr()
	ks("22", 0)
	cr()
	ks("9", 0)
	cr()
	ks("22", 0)
	cr()
	ks("9", 0)
	dr()
	ks("112", 0)
	cr()
	ks("22", 0)
	cr()
	ks("7", 0)
	cr()
	ks("66", 0)
	dr()
	ks("22", 0)
	cr()
	ks("999966", 0)
end RDU

on RDD()
	ks("d", 0)
	cr()
	ks("666666", 0)
	dr() -- room 1
	ks("222", 0)
	cr()
	ks("9", 0)
	cr()
	ks("44", 0)
	dr()
	ks("22", 0)
	cr()
	ks("44", 0) -- room 2
	cr()
	ks("88", 0)
	dr()
	ks("44", 0)
	cr()
	ks("3", 0)
	cr()
	ks("88", 0)
	cr()
	ks("9", 0)
	cr()
	ks("888", 0)
	cr()
	ks("7", 0)
	cr()
	ks("22", 0)
	dr()
	ks("66", 0)
	cr()
	ks("11444444", 0) -- left side
	cr()
	ks("444444", 0) -- line
	dr()
	ks("222", 0) -- bottom left room
	cr()
	ks("7", 0)
	cr()
	ks("66", 0)
	dr()
	ks("22", 0)
	cr()
	ks("66", 0) -- bottom right
	cr()
	ks("88", 0)
	dr()
	ks("66", 0)
	cr()
	ks("1", 0)
	cr()
	ks("888", 0)
	cr()
	ks("7", 0) -- top
	cr()
	ks("88", 0)
	cr()
	ks("1", 0)
	cr()
	ks("66", 0)
	dr()
	ks("88", 0)
	cr()
	ks("333366", 0)
end RDD

on URR()
	ks("d", 0)
	cr()
	ks("888888", 0)
	dr()
	ks("666", 0)
	cr()
	ks("7", 0)
	cr()
	ks("22", 0)
	dr()
	ks("66", 0)
	cr()
	ks("22", 0)
	cr()
	ks("44", 0)
	dr()
	ks("22", 0)
	cr()
	ks("9", 0)
	cr()
	ks("444", 0)
	cr()
	ks("7", 0)
	cr()
	ks("44", 0)
	cr()
	ks("9", 0)
	dr()
	ks("22", 0)
	cr()
	ks("44", 0)
	cr()
	ks("333322", 0)
	cr()
	ks("222222", 0)
	dr()
	ks("666", 0)
	cr()
	ks("9", 0)
	cr()
	ks("44", 0)
	dr()
	ks("22", 0)
	cr()
	ks("7774", 0)
	cr()
	ks("88", 0)
	dr()
	ks("44", 0)
	cr()
	ks("3", 0)
	cr()
	ks("666", 0)
	cr()
	ks("9", 0)
	cr()
	ks("66", 0)
	cr()
	ks("3", 0)
	cr()
	ks("44", 0)
	dr()
	ks("88", 0)
	cr()
	ks("77888", 0)
	
end URR

on UU()
	ks("d", 0)
	cr()
	ks("88888888888", 0)
	cr()
	ks("1", 0)
	cr()
	ks("66", 0)
	cr()
	ks("3", 0)
	cr()
	ks("4444", 0)
	cr()
	ks("22", 0)
	cr()
	ks("44", 0)
	cr()
	ks("3", 0)
	cr()
	ks("666666", 0)
	cr()
	ks("9", 0)
	cr()
	ks("44", 0)
	dr()
	ks("22", 0)
	cr()
	ks("4444", 0)
	dr()
	ks("32", 0)
	cr()
	ks("66", 0)
	cr()
	ks("22", 0)
	cr()
	ks("44", 0)
	cr()
	ks("3", 0)
end UU

on DD()
	ks("d", 0)
	cr()
	ks("22222222222", 0)
	cr()
	ks("7", 0)
	cr()
	ks("66", 0)
	cr()
	ks("9", 0)
	cr()
	ks("4444", 0)
	cr()
	ks("88", 0)
	cr()
	ks("44", 0)
	cr()
	ks("9", 0)
	cr()
	ks("66", 0)
	cr()
	ks("7", 0)
	dr()
	ks("6666", 0)
	cr()
	ks("22", 0)
	dr()
	ks("66", 0)
	cr()
	ks("7", 0)
	cr()
	ks("44", 0)
	cr()
	ks("888", 0)
	cr()
	ks("44", 0)
	cr()
	ks("88", 0)
	cr()
	ks("66", 0)
	cr()
	ks("7", 0)
end DD

on cir11()
	ks("74444", 0)
	cr()
	ks("3366666666", 0)
	cr()
	ks("12", 0)
	cr()
	ks("77777744", 0)
	cr()
	ks("9", 0)
	cr()
	ks("33333322", 0)
	cr()
	ks("14", 0)
	cr()
	ks("7788888888", 0)
	cr()
	ks("32222", 0)
end cir11

on cir13()
	ks("4", 0)
	ks("44447", 0)
	cr()
	ks("336666666666", 0)
	cr()
	ks("12", 0)
	cr()
	ks("7777774444", 0)
	cr()
	ks("9", 0)
	cr()
	ks("33333333", 0)
	cr()
	ks("1", 0)
	cr()
	ks("7777778888", 0)
	cr()
	ks("96", 0)
	cr()
	ks("332222222222", 0)
	cr()
	ks("788888", 0)
end cir13

on cir15()
	ks("8", 0)
	ks("4444447", 0)
	cr()
	ks("33336666666666", 0)
	cr()
	ks("12", 0)
	cr()
	ks("777777774444", 0)
	cr()
	ks("9", 0)
	cr()
	ks("3", 1)
	cr()
	ks("1", 0)
	cr()
	ks("777777778888", 0)
	cr()
	ks("96", 0)
	cr()
	ks("33332222222222", 0)
	cr()
	ks("7788888", 0) -- end circle
end cir15

on ULL()
	ks("d", 0)
	cr()
	ks("888888", 0)
	dr()
	ks("444", 0)
	cr()
	ks("9", 0)
	cr()
	ks("22", 0)
	dr()
	ks("44", 0)
	cr()
	ks("22", 0)
	cr()
	ks("66", 0)
	dr()
	ks("22", 0)
	cr()
	ks("7", 0)
	cr()
	ks("666", 0)
	cr()
	ks("9", 0)
	cr()
	ks("66", 0)
	cr()
	ks("7", 0)
	cr()
	ks("22", 0)
	dr()
	ks("66", 0)
	cr()
	ks("111122", 0)
	cr()
	ks("222222", 0)
	dr()
	ks("444", 0)
	cr()
	ks("3", 0)
	cr()
	ks("88", 0)
	dr()
	ks("44", 0)
	cr()
	ks("88", 0)
	cr()
	ks("66", 0)
	dr()
	ks("88", 0)
	cr()
	ks("1", 0)
	cr()
	ks("666", 0)
	cr()
	ks("3", 0)
	cr()
	ks("66", 0)
	cr()
	ks("1", 0)
	cr()
	ks("88", 0)
	dr()
	ks("66", 0)
	cr()
	ks("777788", 0)
end ULL

on Workshops()
	global df
	log "WS!"
	set stairs to choose from list {"2", "3"} with title "Stair size?" default items {"3"}
	log stairs
	set wsAction to choose from list {"Dig", "Stockpile"} with title "What do?" default items {"Dig"}
	log wsAction
	if (wsAction contains {"dig"}) then
		if (stairs contains {"3"}) then
			set frontmost of df to true
			ks("d", 0)
			ks("4", 1)
			ks("4", 0)
			cr()
			ks("33", 0)
			ks("66", 1)
			ks("66", 0)
			cr()
			ks("11111111111", 0)
			cr()
			ks("77", 0)
			ks("88", 1)
			ks("88", 0)
			cr()
			ks("9", 0)
			dr()
			ks("7", 0)
			cr()
			ks("999", 0)
			cr()
			ks("222222", 0)
			dr()
			ks("9", 0)
			cr()
			ks("333", 0)
			cr()
			ks("44444444", 0)
			dr()
			ks("4", 0)
			cr()
			ks("111", 0)
			cr()
			ks("88888", 0)
			cr()
			ks("999", 0)
			cr()
			ks("32", 0)
			dr()
			ks("22222222", 0)
			cr()
			ks("4", 0)
			cr()
			ks("2", 0)
			cr()
			ks("4", 0)
			cr()
			ks("2", 0)
			dr()
			ks("7", 0)
			cr()
			ks("74", 0)
			cr()
			ks("22", 0)
			dr()
			
			-- left workshops
			ks("74", 0)
			cr()
			ks("777", 0)
			cr()
			ks("3222", 0)
			dr()
			ks("444", 0)
			cr()
			ks("111", 0)
			cr()
			ks("9666", 0)
			dr()
			ks("221", 0)
			cr()
			ks("333", 0)
			cr()
			ks("7888", 0)
			dr()
			ks("666", 0)
			dr()
			ks("2", 0)
			cr()
			ks("333", 0)
			cr()
			ks("9988", 0)
			cr()
			ks("2", 0)
			cr()
			ks("6", 0)
			cr()
			ks("2", 0)
			cr()
			ks("6", 0)
			dr()
			ks("1", 0)
			cr()
			ks("422", 0)
			cr()
			ks("66", 0)
			dr()
			ks("2222", 0)
			-- bottom rooms
			dr()
			ks("78", 0)
			cr()
			ks("111", 0)
			cr()
			ks("3366", 0)
			cr()
			ks("333", 0)
			cr()
			ks("7888", 0)
			dr()
			ks("96", 0)
			dr()
			ks("9", 0)
			cr()
			ks("333", 0)
			cr()
			ks("88888", 0)
			cr()
			ks("777", 0)
			cr()
			ks("221", 0)
			dr()
			ks("88888", 0)
			cr()
			ks("6", 0)
			cr()
			ks("8", 0)
			cr()
			ks("6", 0)
			cr()
			ks("8", 0)
			dr()
			ks("3", 0)
			cr()
			ks("36", 0)
			cr()
			ks("88", 0)
			dr()
			ks("6666", 0)
			dr()
			ks("14", 0)
			cr()
			ks("333", 0)
			cr()
			ks("8899", 0)
			cr()
			ks("999", 0)
			cr()
			ks("1444", 0)
			dr()
			ks("78", 0)
			dr()
			ks("96", 0)
			cr()
			ks("777", 0)
			cr()
			ks("44", 0)
			cr()
			ks("111", 0)
			cr()
			ks("366", 0)
			dr()
			ks("44444", 0)
			cr()
			ks("8", 0)
			cr()
			ks("4", 0)
			cr()
			ks("8", 0)
			cr()
			ks("4", 0)
			dr()
			ks("9", 0)
			cr()
			ks("98", 0)
			cr()
			ks("44", 0)
			dr()
			ks("111222", 0) -- original position
			ks("i", 0)
			cr()
			ks("33", 0)
			cr()
			ks("77", 0)
		end if
	else if (wsAction contains "stockpil") then
		set frontmost of df to true
		
		ks("w4444", 0)
		cr()
		ks("1144", 0)
		cr()
		ks("8", 0)
		ks("x", 0)
		dr()
		ks("w4", 0)
		dr()
		ks("999t", 0)
		set tmp to 17
		repeat while (tmp is greater than 0)
			ks("e", 0)
			kc(125)
			set tmp to tmp - 1
		end repeat
		delay 0.5
		kc(53)
		cr()
		ks("96", 0)
		cr()
		ks("32", 0)
		dr()
		ks("332222", 0)
		dr()
		ks("1", 0)
		cr()
		ks("12", 0)
		cr()
		ks("663", 0)
		set tmp to 17
		ks("t", 0)
		repeat while (tmp is greater than 0)
			ks("d", 0)
			kc(125)
			set tmp to tmp - 1
		end repeat
		kc(53)
		cr()
		ks("998", 0)
		cr()
		ks("122x", 0)
		dr()
		ks("999988", 0)
		set tmp to 17
		ks("t", 0)
		repeat while (tmp is greater than 0)
			ks("e", 0)
			kc(125)
			set tmp to tmp - 1
		end repeat
		kc(53)
		dr()
		ks("3", 0)
		cr()
		ks("34", 0)
		cr()
		ks("988", 0)
		ks("h", 0)
		cr()
		ks("774", 0)
		cr()
		ks("366", 0)
		ks("x", 0)
		dr()
		ks("777744", 0)
		ks("c", 0)
		dr()
		ks("9", 0)
		cr()
		ks("98t", 0)
		set tmp to 17
		repeat while (tmp is greater than 0)
			if (tmp is equal to 12) then
				kc(124)
				ks("d", 0)
				kc(125)
				ks("d", 0)
				kc(125)
				kc(125)
				ks("d", 0)
				kc(123)
			else
				ks("d", 0)
				kc(125)
			end if
			set tmp to tmp - 1
		end repeat
		cr()
		ks("447", 0)
		cr()
		ks("112", 0)
		cr()
		
	end if
end Workshops




if (Go is 1) then
	
	--	tell application "System Events"
	--		134 up
	--		133 down
	--		132 right
	--		132 left
	--		53 escape
	--		36 return
	--		tell process "SystemUIServer"
	if (choice contains "Bedrooms") then
		set fromDir to choose from list {"New floor", "North", "South", "East", "West"} with title "From which direction" with prompt "Choose which direction from which to enter" OK button name "OK" cancel button name "Cancel" default items {"New floor"}
		if (fromDir contains "new floor") then
			set frontmost of df to true
			ks("d", 0)
			ks("444", 1)
			cr()
			ks("666666", 1)
			ks("33", 0)
			cr()
			ks("9", 0)
			cr()
			ks("444444", 1)
			ks("4444", 0)
			cr()
			ks("99", 0)
			cr()
			ks("2222", 0)
			cr()
			ks("9", 0)
			ks("x", 0)
			dr()
			ks("88", 0)
			dr()
			ks("9", 0)
			ks("d", 0)
			cr()
			ks("2222", 0)
			cr()
			ks("98", 0)
			ks("x", 0)
			dr()
			ks("d", 0)
			ks("32", 0)
			cr()
			ks("8888", 0)
			cr()
			ks("666666", 0)
			cr()
			ks("333366", 0)
			
			cr()
			ks("1", 0)
			cr()
			
			ks("777788", 0)
			cr()
			ks("66666666663", 0)
			cr()
			ks("66666", 0)
			ks("66666663333", 0)
			cr()
			ks("1144", 0)
			cr()
			ks("77777777", 0)
			cr()
			ks("9988", 0)
			cr()
			ks("3333222222222222", 0)
			cr()
			
			ks("12", 0)
			ks("22", 1)
			ks("2", 0)
			cr()
			ks("888888", 1)
			ks("77", 0)
			cr()
			ks("9", 0)
			dr()
			ks("11", 0)
			cr()
			ks("6666", 0)
			cr()
			ks("x", 0)
			ks("1", 0)
			dr()
			ks("44", 0)
			dr()
			ks("d", 0)
			ks("1", 0)
			cr()
			ks("6666", 0)
			cr()
			ks("x", 0)
			ks("14", 0)
			dr()
			ks("d", 0)
			ks("14", 0)
			cr()
			ks("6666", 0)
			cr()
			ks("222222", 0)
			cr()
			ks("111122", 0)
			cr()
			ks("7", 0)
			cr()
			ks("999966", 0)
			cr()
			--			delay 12
			ks("3", 1)
			ks("22223333333", 0)
			
			-- right side
			cr()
			ks("777744", 0)
			cr()
			ks("9", 0)
			cr()
			ks("333322", 0)
			cr()
			ks("9666666", 0)
			cr()
			ks("8888", 0)
			cr()
			ks("32", 0)
			ks("x", 0)
			dr()
			ks("98", 0)
			ks("d", 0)
			cr()
			ks("2222", 0)
			cr()
			ks("9", 0)
			ks("x", 0)
			dr()
			ks("88", 0)
			dr()
			ks("d", 0)
			ks("9", 0)
			cr()
			ks("2222", 0)
			cr()
			
			ks("111", 1) -- bottom
			--			delay 12
			ks("d", 0)
			dr()
			ks("99", 0)
			cr()
			ks("4444", 0)
			cr()
			ks("x", 0)
			ks("9", 0)
			dr()
			ks("66", 0)
			dr()
			ks("78", 0)
			dr()
			ks("36", 0)
			ks("d", 0)
			cr()
			ks("4444", 0)
			cr()
			ks("88", 0)
			cr()
			ks("6666", 0)
			cr()
			ks("888888", 0)
			cr()
			ks("777788", 0)
			cr()
			ks("1", 0)
			cr()
			ks("333366", 0)
			cr()
			ks("11122", 0)
			
			--
			ks("66", 0)
			RDU()
			ks("7777778", 0)
			LL()
			ks("66666666", 0)
			RR()
			ks("7788888", 0)
			RDD()
			
			-- top rooms
			
			ks("88", 1)
			RDU()
			ks("9988888", 0)
			RR()
			ks("44444444", 0)
			LL()
			ks("9999998", 0)
			RDD()
			
			-- right side
			ks("32", 1)
			ks("11", 0)
			URR()
			
			ks("6666699", 0)
			UU()
			ks("22222222", 0)
			DD()
			ks("9999996", 0)
			ULL()
			ks("444", 1)
			ks("4444", 0)
			ULL()
			ks("7744444", 0)
			UU()
			ks("22222222", 0)
			DD()
			ks("7777774", 0)
			URR()
			ks("66", 1)
			ks("663", 0)
			ks("i", 0)
			cr()
			ks("33", 0)
			cr()
			ks("77", 0)
		else if (fromDir contains "South") then
			southBR()
		else if (fromDir contains "North") then
			northBR()
		else if (fromDir contains "East") then
			eastBR()
		else if (fromDir contains "West") then
			westBR()
		end if
	else if (choice contains "circles") then
		set cirRad to choose from list {"11", "13", "15", "Concentric"} with title "Circle Diameter?" with prompt "Choose the diameter of the circle" default items {"11"}
		log choice
		if (cirRad contains {"11"}) then
			set frontmost of df to true
			ks("d", 0)
			cir11()
		else if (cirRad contains {"13"}) then
			set frontmost of df to true
			ks("d", 0)
			cir13()
		else if (cirRad contains {"15"}) then
			set frontmost of df to true
			ks("d", 0)
			cir15()
		else if (cirRad contains {"concentric"}) then
			set frontmost of df to true
			ks("d", 0)
			cir15()
			ks("x", 0)
			cir13()
			ks("d", 0)
			cir11()
		end if
	else if (choice contains {"Workshops"}) then
		Workshops()
	end if
else
	
end if
